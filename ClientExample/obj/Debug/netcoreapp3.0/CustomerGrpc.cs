// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Customer.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace CustomerService {
  public static partial class CustomerContract
  {
    static readonly string __ServiceName = "CustomerPackage.CustomerContract";

    static readonly grpc::Marshaller<global::CustomerService.Customer> __Marshaller_CustomerPackage_Customer = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CustomerService.Customer.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CustomerService.CustomerId> __Marshaller_CustomerPackage_CustomerId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CustomerService.CustomerId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CustomTypesGRPC.BOOL> __Marshaller_BOOL = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CustomTypesGRPC.BOOL.Parser.ParseFrom);

    static readonly grpc::Method<global::CustomerService.Customer, global::CustomerService.Customer> __Method_CreateCustomer = new grpc::Method<global::CustomerService.Customer, global::CustomerService.Customer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCustomer",
        __Marshaller_CustomerPackage_Customer,
        __Marshaller_CustomerPackage_Customer);

    static readonly grpc::Method<global::CustomerService.CustomerId, global::CustomerService.Customer> __Method_ReadCustomer = new grpc::Method<global::CustomerService.CustomerId, global::CustomerService.Customer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadCustomer",
        __Marshaller_CustomerPackage_CustomerId,
        __Marshaller_CustomerPackage_Customer);

    static readonly grpc::Method<global::CustomerService.Customer, global::CustomTypesGRPC.BOOL> __Method_UpdateCustomer = new grpc::Method<global::CustomerService.Customer, global::CustomTypesGRPC.BOOL>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomer",
        __Marshaller_CustomerPackage_Customer,
        __Marshaller_BOOL);

    static readonly grpc::Method<global::CustomerService.CustomerId, global::CustomTypesGRPC.BOOL> __Method_DeleteCustomer = new grpc::Method<global::CustomerService.CustomerId, global::CustomTypesGRPC.BOOL>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCustomer",
        __Marshaller_CustomerPackage_CustomerId,
        __Marshaller_BOOL);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::CustomerService.CustomerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for CustomerContract</summary>
    public partial class CustomerContractClient : grpc::ClientBase<CustomerContractClient>
    {
      /// <summary>Creates a new client for CustomerContract</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CustomerContractClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CustomerContract that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CustomerContractClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CustomerContractClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CustomerContractClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::CustomerService.Customer CreateCustomer(global::CustomerService.Customer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::CustomerService.Customer CreateCustomer(global::CustomerService.Customer request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCustomer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::CustomerService.Customer> CreateCustomerAsync(global::CustomerService.Customer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::CustomerService.Customer> CreateCustomerAsync(global::CustomerService.Customer request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCustomer, null, options, request);
      }
      public virtual global::CustomerService.Customer ReadCustomer(global::CustomerService.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::CustomerService.Customer ReadCustomer(global::CustomerService.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadCustomer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::CustomerService.Customer> ReadCustomerAsync(global::CustomerService.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::CustomerService.Customer> ReadCustomerAsync(global::CustomerService.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadCustomer, null, options, request);
      }
      public virtual global::CustomTypesGRPC.BOOL UpdateCustomer(global::CustomerService.Customer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::CustomTypesGRPC.BOOL UpdateCustomer(global::CustomerService.Customer request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::CustomTypesGRPC.BOOL> UpdateCustomerAsync(global::CustomerService.Customer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::CustomTypesGRPC.BOOL> UpdateCustomerAsync(global::CustomerService.Customer request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomer, null, options, request);
      }
      public virtual global::CustomTypesGRPC.BOOL DeleteCustomer(global::CustomerService.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::CustomTypesGRPC.BOOL DeleteCustomer(global::CustomerService.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCustomer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::CustomTypesGRPC.BOOL> DeleteCustomerAsync(global::CustomerService.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::CustomTypesGRPC.BOOL> DeleteCustomerAsync(global::CustomerService.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCustomer, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CustomerContractClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CustomerContractClient(configuration);
      }
    }

  }
}
#endregion
